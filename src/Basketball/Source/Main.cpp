/*
  ==============================================================================

	This file was auto-generated by the Introjucer!

	It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include <JuceHeader.h>
#include "Main.h"

using namespace waa;

BasketballApplication::BasketballApplication()
{
}

void BasketballApplication::initialise(const String& commandLine)
{
	// This method is where you should put your application's initialisation code..

	mainWindow = new MainWindow(getApplicationName());

	RegisterMainWindowCallbacks(mainWindow->GetMainComponent());
}

void BasketballApplication::RegisterHomeScoreIncreaseButton(MainContentComponent& mcc)
{
	mcc.RegisterMainWindowCallbacks(kHomeScoreIncreaseButton,
									[&mcc]()
	{
		Logger::outputDebugString("callback arrive here");
		auto home_score = mcc.GetHomeScore();
		home_score++;

		MessageManager::callAsync([home_score, &mcc]()
		{
			mcc.SetHomeScore(home_score);
		});
		return true;
	});
}

void BasketballApplication::RegisterMainWindowCallbacks(MainContentComponent& mcc)
{
	RegisterHomeScoreIncreaseButton(mcc);
}

void BasketballApplication::shutdown()
{
	// Add your application's shutdown code here..

	mainWindow = nullptr; // (deletes our window)
}

void BasketballApplication::systemRequestedQuit()
{
	// This is called when the app is being asked to quit: you can ignore this
	// request and let the app carry on running, or call quit() to allow the app to close.
	quit();
}

void BasketballApplication::anotherInstanceStarted(const String& commandLine)
{
	// When another instance of the app is launched while this one is running,
	// this method is invoked, and the commandLine parameter tells you what
	// the other instance's command-line arguments were.
}


//=================================================================
//class MainWindow
//=================================================================
void BasketballApplication::MainWindow::closeButtonPressed()
{

	JUCEApplication::getInstance()->systemRequestedQuit();
}

BasketballApplication::MainWindow::MainWindow(String name)
	: DocumentWindow(name,
					 Colours::lightgrey,
					 5)
{
	main_component_ = new MainContentComponent();
	setUsingNativeTitleBar(false);
	setContentOwned(main_component_, true);

	centreWithSize(getWidth(), getHeight());
	setVisible(true);

	setResizable(false, false);
	setFullScreen(false);
}

MainContentComponent& BasketballApplication::MainWindow::GetMainComponent() const
{
	jassert(main_component_ != nullptr);
	return *main_component_;
}
